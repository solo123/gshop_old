- SalesSheet.where('status=1 and discount_rate is null').each do |ss|
- ss.discount_rate = ss.actual_amount / ss.total_amount
- ss.sales_sheet_items.each do |i|
- i.actual_amount = i.amount * ss.discount_rate
- i.save
- end
- ss.save
- end
- results = SalesSheetItem.select("product_id, sum(quantity) as quantity, sum(amount) as amount, sum(actual_amount) as actual_amount").group(:product_id)
%canvas#myChart{:height => "400", :width => "400"}
%table.table.table-bordered.table-striped
  %thead
    %tr
      %th product
      %th quantity
      %th amount_tot
      %th price
      %th actual amount
      %th actual price
  %tbody
    - results.each do |r|
      %tr
        %td
          = r.product_id
          \# #{r.product.short_name}
        %td.num= r.quantity
        %td.num= r.amount
        %td.num= number_with_precision(r.amount / r.quantity, :precision => 2)
        %td.num= number_with_precision(r.actual_amount, :precision => 2)
        %td.num= number_with_precision(r.actual_amount / r.quantity, :precision => 2)
- content_for :head do
  %script{:src => "/css/Chart.min.js"}
  = javascript_tag do
    var ctx = $("#myChart").get(0).getContext("2d");
    var data = {
    labels : ["January","February","March","April","May","June","July"],
    datasets : [
    {
    fillColor : "rgba(220,220,220,0.5)",
    strokeColor : "rgba(220,220,220,1)",
    pointColor : "rgba(220,220,220,1)",
    pointStrokeColor : "#fff",
    data : [65,59,90,81,56,55,40]
    },
    {
    fillColor : "rgba(151,187,205,0.5)",
    strokeColor : "rgba(151,187,205,1)",
    pointColor : "rgba(151,187,205,1)",
    pointStrokeColor : "#fff",
    data : [28,48,40,19,96,27,100]
    }
    ]
    }
    
    var options = {};
    new Chart(ctx).Line(data, options);
